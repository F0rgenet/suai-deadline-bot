from datetime import datetime, timedelta

from aiogram import Bot
import asyncio

from src.database.queries import (
    get_all_users, get_user_deadlines_from_db, update_user_deadlines,
    get_users_with_upcoming_deadlines
)
from src.parser.scraper import parse_deadlines_from_lk
from src.utils.crypto import decrypt_data

async def update_all_deadlines():
    """
    –ó–∞–¥–∞—á–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    print("SCHEDULER: –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤...")
    users = await get_all_users()
    for user in users:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if not user.encrypted_login_lk or not user.encrypted_password_lk:
            continue
        
        # –†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        login = decrypt_data(user.encrypted_login_lk)
        password = decrypt_data(user.encrypted_password_lk)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–µ—Ä
        loop = asyncio.get_event_loop()
        deadlines = await loop.run_in_executor(None, parse_deadlines_from_lk, login, password)
        
        if deadlines is not None:
            # –ï—Å–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥ –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–µ–¥–ª–∞–π–Ω—ã –≤ –ë–î
            await update_user_deadlines(user.telegram_id, deadlines)
            print(f"SCHEDULER: –î–µ–¥–ª–∞–π–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.telegram_id} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.")
        else:
            print(f"SCHEDULER: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã –¥–ª—è {user.telegram_id} (–æ—à–∏–±–∫–∞ –ø–∞—Ä—Å–µ—Ä–∞).")
        
        await asyncio.sleep(5) # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å —Å–∞–π—Ç –õ–ö

    print("SCHEDULER: –ó–∞–¥–∞—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")


async def send_deadline_notifications(bot: Bot):
    """
    –ó–∞–¥–∞—á–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ –¥–µ–¥–ª–∞–π–Ω–∞—Ö —Å —É—á—ë—Ç–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    print("SCHEDULER: –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ç–æ —Ö–æ—á–µ—Ç –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    users_to_notify = await get_all_users(only_with_notifications=True)
    
    
    for user in users_to_notify:
        if not user.notification_days: # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª –≤—Å–µ –¥–Ω–∏
            continue

        notification_days_set = set(map(int, user.notification_days.split(',')))
        user_deadlines = await get_user_deadlines_from_db(user.telegram_id)
        
        today = datetime.now().date()
        
        for deadline in user_deadlines:
            days_left = (deadline.due_date.date() - today).days
            
            if days_left in notification_days_set:
                text = (
                    f"üîî <b>–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –¥–µ–¥–ª–∞–π–Ω–µ!</b>\n\n" 
                    f"üìö <b>–ü—Ä–µ–¥–º–µ—Ç:</b> {deadline.course_name}\n" 
                    f"üìù <b>–ó–∞–¥–∞–Ω–∏–µ:</b> {deadline.task_name}\n\n"
                    f"üóìÔ∏è <u>–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π</u>: <b>{days_left}</b>"
                )
                try:
                    await bot.send_message(chat_id=user.telegram_id, text=text)
                    print(f"SCHEDULER: –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.telegram_id}.")
                except Exception as e:
                    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –±–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                    print(f"SCHEDULER: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ {user.telegram_id}. –û—à–∏–±–∫–∞: {e}")
                
                await asyncio.sleep(1) # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
    
    print("SCHEDULER: –ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")