from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.database.models import User


def get_main_menu_keyboard():
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    buttons = [
        [KeyboardButton(text="üö® –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã")],
        [
            KeyboardButton(text="üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"),
            KeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"),
            KeyboardButton(text="üõ†Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–¥–ª–∞–π–Ω–æ–≤")
        ]
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard


def get_profile_keyboard(custom_deadlines_count: int = 0):
    """
    –°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é '–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å'.
    –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è –ª–∏—á–Ω—ã—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤.
    """
    builder = InlineKeyboardBuilder()
    
    if custom_deadlines_count > 0:
        builder.button(
            text=f"üöÆ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –ª–∏—á–Ω—ã–µ –¥–µ–¥–ª–∞–π–Ω—ã", 
            callback_data="delete_all_custom"
        )
    
    builder.button(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –º–æ–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="delete_my_data")
    
    # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ
    builder.adjust(1)
    return builder.as_markup()


def get_confirm_delete_keyboard():
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data="confirm_delete")
    builder.button(text="‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å", callback_data="cancel_delete")
    builder.adjust(2)  # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–∏–Ω —Ä—è–¥ –ø–æ –¥–≤–µ
    return builder.as_markup()


def get_cancel_keyboard():
    buttons = [[KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard


def get_deadlines_settings_keyboard(deadlines: list):
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–∞–º–∏.
    –ö–∞–∂–¥—ã–π –¥–µ–¥–ª–∞–π–Ω - —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è.
    """
    builder = InlineKeyboardBuilder()
    if deadlines:
        for deadline in deadlines:
            builder.button(
                text=f"‚ùå {deadline.course_name[:20]}... ({deadline.due_date.strftime('%d.%m')})",
                callback_data=f"del_deadline_{deadline.id}"
            )

    builder.button(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –¥–µ–¥–ª–∞–π–Ω", callback_data="add_deadline")
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_from_settings")

    # –í—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏: –ø–æ –æ–¥–Ω–æ–π –Ω–∞ –¥–µ–¥–ª–∞–π–Ω, –∏ –¥–≤–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –≤ —Ä—è–¥
    builder.adjust(*([1] * len(deadlines)), 1, 1)
    return builder.as_markup()


def get_notification_settings_keyboard(user: User):
    """–°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    builder = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è
    status_text = "‚úÖ –í–∫–ª—é—á–µ–Ω—ã" if user.notifications_enabled else "‚ùå –í—ã–∫–ª—é—á–µ–Ω—ã"
    builder.button(text=f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {status_text}", callback_data="toggle_notifications")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å—Ç–æ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ —á–∞—Å–∞–º
    interval = user.notification_interval_hours
    interval_text = f"{interval} —á." if interval > 0 else "–í—ã–∫–ª."
    builder.button(text=f"–ß–∞—Å—Ç—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {interval_text}", callback_data="set_interval")

    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –¥–Ω–µ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    user_days = set(map(int, user.notification_days.split(','))) if user.notification_days else set()
    possible_days = [1, 3, 7]

    day_buttons = []
    for day in possible_days:
        text = f"‚úÖ –∑–∞ {day} –¥." if day in user_days else f"üîï –∑–∞ {day} –¥."
        day_buttons.append(InlineKeyboardButton(
            text=text, callback_data=f"toggle_day_{day}"))

    # –†—è–¥ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–Ω–µ–π
    builder.row(*day_buttons)

    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_main_from_settings")
    return builder.as_markup()


def get_confirm_delete_deadline_keyboard(deadline_id: int):
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –¥–µ–¥–ª–∞–π–Ω–∞."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_del_deadline_{deadline_id}")
    builder.button(text="‚ùå –ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å", callback_data="cancel_del_deadline")
    builder.adjust(2)
    return builder.as_markup()


def get_confirm_delete_all_custom_keyboard():
    """–°–æ–∑–¥–∞—ë—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –í–°–ï–• –ª–∏—á–Ω—ã—Ö –¥–µ–¥–ª–∞–π–Ω–æ–≤."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å –≤—Å–µ", callback_data="confirm_delete_all_custom")
    builder.button(text="‚ùå –ù–µ—Ç, –æ—Ç–º–µ–Ω–∞", callback_data="cancel_delete_all_custom")
    builder.adjust(2)
    return builder.as_markup()


def get_pagination_keyboard(current_page: int, total_pages: int):
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (–í–ø–µ—Ä—ë–¥/–ù–∞–∑–∞–¥).
    """
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if current_page > 0:
        builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"page_{current_page - 1}")
        
    # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã ('ignore' - —á—Ç–æ–±—ã –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–µ –¥–µ–ª–∞–ª–æ –Ω–∏—á–µ–≥–æ)
    builder.button(text=f"üìÑ {current_page + 1} / {total_pages}", callback_data="ignore")
    
    # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä—ë–¥" –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    if current_page < total_pages - 1:
        builder.button(text="–í–ø–µ—Ä—ë–¥ ‚û°Ô∏è", callback_data=f"page_{current_page + 1}")
        
    # –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –æ–¥–∏–Ω —Ä—è–¥
    builder.adjust(3)
    return builder.as_markup()
