name: Build & Deploy Telegram Bot

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest
          echo "IMAGE_ID=$IMAGE_ID"
          docker build -t $IMAGE_ID .
          docker push $IMAGE_ID

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.DOCKER_SSH_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.DOCKER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy on server
        run: |
          ssh ${{ secrets.DOCKER_USER }}@${{ secrets.DOCKER_HOST }} << EOF
            set -e # Прерывать скрипт при ошибке

            # Переменные
            APP_DIR="\$HOME/suai-deadline-bot"
            CONTAINER_NAME="suai-bot-container"
            IMAGE_ID="ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:latest"

            # Создаем директории для .env и для volume базы данных
            mkdir -p "\$APP_DIR/src/database"

            echo "${{ secrets.ENV_FILE_CONTENT }}" > "\$APP_DIR/.env"

            echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            docker pull "\$IMAGE_ID"

            if [ "\$(docker ps -aq -f name=\$CONTAINER_NAME)" ]; then
              docker stop "\$CONTAINER_NAME"
              docker rm "\$CONTAINER_NAME"
            fi

            docker run -d \
              --name "\$CONTAINER_NAME" \
              --restart unless-stopped \
              --env-file "\$APP_DIR/.env" \
              -v "\$APP_DIR/src/database:/app/src/database" \
              "\$IMAGE_ID"
          EOF
